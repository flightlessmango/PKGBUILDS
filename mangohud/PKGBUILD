pkgname=('mangohud' 'lib32-mangohud')
pkgver=r40.9527868
pkgrel=1
pkgdesc="Vulkan overlay layer to display information about the application"
arch=('x86_64')
makedepends=('gcc' 'meson' 'python-mako' 'libx11' 'lib32-libx11' 'git')
depends=('glslang' 'libglvnd' 'lib32-libglvnd' 'vulkan-headers')
replaces=('vulkan-mesa-layer-mango' 'lib32-vulkan-mesa-layer-mango')
license=('custom')
md5sums=('SKIP')
source=("mangohud"::"git+https://github.com/flightlessmango/mangohud.git")
build_args=""

pkgver() {
  cd "${srcdir}/mangohud"
  printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd "${srcdir}/mangohud"
  git submodule update --init --depth 50
}

build64() {
  export CC="gcc -m64"
  export CXX="g++ -m64"
  export PKG_CONFIG_PATH="/usr/lib/pkgconfig"
  export LLVM_CONFIG="/usr/bin/llvm-config"
  
  cd "${srcdir}"
  rm -rf "build"
  rm -rf "fakeinstall"
  arch-meson mangohud build \
    --libdir=/usr/lib \
    ${build_args}

  ninja -C build
  DESTDIR="${srcdir}/fakeinstall" ninja -C build install
}
build32() {
  export CC="gcc -m32"
  export CXX="g++ -m32"
  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
  export LLVM_CONFIG="/usr/bin/llvm-config32"

  cd "${srcdir}"
  rm -rf "build"
  rm -rf "fakeinstall"
  arch-meson mangohud build \
    --libdir=/usr/lib32 \
    ${build_args}

  ninja -C build
  DESTDIR="${srcdir}/fakeinstall" ninja -C build install
}

package_mangohud() {
  provides=("mangohud=${pkgver}")
  build64
  install -Dm664 "${srcdir}/fakeinstall/usr/lib/libMangoHud.so" "${pkgdir}/usr/lib/libMangoHud.so"
  install -Dm664 "${srcdir}/fakeinstall/usr/share/vulkan/implicit_layer.d/mangohud.json" "${pkgdir}/usr/share/vulkan/implicit_layer.d/mangohud.json"
}
package_lib32-mangohud() {
  provides=("lib32-mangohud=${pkgver}")
  build32
  install -Dm664 "${srcdir}/fakeinstall/usr/lib32/libMangoHud.so" "${pkgdir}/usr/lib32/libMangoHud.so"
}